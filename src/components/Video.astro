---
import { urlFor } from "@sanity/lib/image";
import type { MuxVideo } from "@/types";

interface Props {
  video: MuxVideo;
  class?: string;
}

const { class: className, video } = Astro.props;
const placeholder: string =
  video.poster.asset && urlFor(video.poster, { quality: 50 }).width(16).url();
---

<figure class="relative aspect-video bg-gray-200" class:list={className}>
  <video
    data-playback-id={video.asset.playbackId}
    muted
    autoplay
    playsinline
    loop
    class="absolute inset-0 z-10 h-full w-full object-cover"></video>
  <img
    class="pointer-events-none absolute inset-0 top-0 left-0 block h-full w-full object-cover transition-opacity"
    src={placeholder}
    alt=""
    aria-hidden="true"
    role="presentation"
    loading="eager"
  />
</figure>

<script>
  import Hls from "hls.js";

  document.addEventListener("astro:page-load", () => {
    const figures = document.querySelectorAll("figure");

    figures.forEach((figure) => {
      const video = figure.querySelector("video") as HTMLVideoElement;
      const placeholder = figure.querySelector("img[role='presentation']");

      if (!video) return;

      const playbackId = video.dataset.playbackId;
      const videoSrc = `https://stream.mux.com/${playbackId}.m3u8`;

      if (video.canPlayType("application/vnd.apple.mpegurl")) {
        video.src = videoSrc;
      } else if (Hls.isSupported()) {
        var hls = new Hls();
        hls.loadSource(videoSrc);
        hls.attachMedia(video);
      } else {
        console.error("This browser does not support HLS.");
      }

      video.addEventListener("loadeddata", () => {
        placeholder?.classList.add("opacity-0");
      });
    });
  });
</script>
